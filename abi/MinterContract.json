{
    "contractName": "MinterContract",
    "sourceName": "contracts/MinterContract.sol",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "lsct",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "lazy",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "lazyBurnPerc",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "AssociationFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "BadArguments",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "quantity",
                    "type": "uint256"
                }
            ],
            "name": "BadQuantity",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "BurnFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "EmptyMetadata",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedNFTMint",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedToMint",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedToPayLazy",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "HbarCooldown",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LazyCooldown",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MaxMintExceeded",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MaxMintPerWalletExceeded",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MaxSerials",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MemoTooLong",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MintedOut",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NFTTransferFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NoWLToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotEnoughHbar",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotEnoughLazy",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotEnoughWLSlots",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotOpen",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "NotReset",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotTokenOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotWL",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "Paused",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TooManyFees",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TooMuchMetadata",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "WLPurchaseFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "WLTokenUsed",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_burnerAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "int64[]",
                    "name": "_serials",
                    "type": "int64[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "_newSupply",
                    "type": "uint64"
                }
            ],
            "name": "BurnEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_msgAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "_mintType",
                    "type": "bool"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "_serial",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "_metadata",
                    "type": "string"
                }
            ],
            "name": "MintEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "enum MinterContract.ContractEventType",
                    "name": "_eventType",
                    "type": "uint8"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "_msgAddress",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_msgNumeric",
                    "type": "uint256"
                }
            ],
            "name": "MinterContractMessage",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [
                {
                    "internalType": "string[]",
                    "name": "_metadata",
                    "type": "string[]"
                }
            ],
            "name": "addMetadata",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_totalLoaded",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_newAddresses",
                    "type": "address[]"
                }
            ],
            "name": "addToWhitelist",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "int64[]",
                    "name": "_serialNumbers",
                    "type": "int64[]"
                }
            ],
            "name": "burnNFTs",
            "outputs": [
                {
                    "internalType": "uint64",
                    "name": "_newTotalSupply",
                    "type": "uint64"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buyWlWithLazy",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_wlSpotsPurchased",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256[]",
                    "name": "_serials",
                    "type": "uint256[]"
                }
            ],
            "name": "buyWlWithTokens",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_wlSpotsPurchased",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cid",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "clearWhitelist",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_numAddressesRemoved",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBatchSize",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_batchSize",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getCost",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_hbarCost",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_lazyCost",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getLSCT",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "_lsct",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getLazyBurnPercentage",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_lazyBurn",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getLazyToken",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "_lazy",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_startIndex",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_endIndex",
                    "type": "uint256"
                }
            ],
            "name": "getMetadataArray",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "_metadataList",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getMintEconomics",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "lazyFromContract",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "mintPriceHbar",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "mintPriceLazy",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "wlDiscount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxMint",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "buyWlWithLazy",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxWlAddressMint",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxMintPerWallet",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "wlToken",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct MinterContract.MintEconomics",
                    "name": "_mintEconomics",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getMintTiming",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "lastMintTime",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "mintStartTime",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "mintPaused",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "cooldownPeriod",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "refundWindow",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "wlOnly",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct MinterContract.MintTiming",
                    "name": "_mintTiming",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNFTTokenAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNumberMintedByAddress",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_numMinted",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNumberMintedByAllAddresses",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "_walletList",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "_numMintedList",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNumberMintedByAllWlAddresses",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "_wlWalletList",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "_wlNumMintedList",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_offset",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_batchSize",
                    "type": "uint256"
                }
            ],
            "name": "getNumberMintedByAllWlAddressesBatch",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "_wlWalletList",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "_wlNumMintedList",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getNumberMintedByWlAddress",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_wlNumMinted",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getRemainingMint",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_remainingMint",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "getTokenExpiryInfo",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "responseCode",
                    "type": "int256"
                },
                {
                    "components": [
                        {
                            "internalType": "uint32",
                            "name": "second",
                            "type": "uint32"
                        },
                        {
                            "internalType": "address",
                            "name": "autoRenewAccount",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "autoRenewPeriod",
                            "type": "uint32"
                        }
                    ],
                    "internalType": "struct IHederaTokenService.Expiry",
                    "name": "expiryInfo",
                    "type": "tuple"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getWhitelist",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "_wl",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "_wlQty",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantTokenKyc",
            "outputs": [
                {
                    "internalType": "int64",
                    "name": "responseCode",
                    "type": "int64"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_symbol",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_memo",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_cid",
                    "type": "string"
                },
                {
                    "components": [
                        {
                            "internalType": "uint32",
                            "name": "numerator",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "denominator",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "fallbackfee",
                            "type": "uint32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct MinterContract.NFTFeeObject[]",
                    "name": "_royalties",
                    "type": "tuple[]"
                },
                {
                    "internalType": "int64",
                    "name": "_maxIssuance",
                    "type": "int64"
                }
            ],
            "name": "initialiseNFTMint",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "_createdTokenAddress",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_maxSupply",
                    "type": "uint256"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "addressToCheck",
                    "type": "address"
                }
            ],
            "name": "isAddressWL",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_inWl",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "_qty",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isKyc",
            "outputs": [
                {
                    "internalType": "int64",
                    "name": "responseCode",
                    "type": "int64"
                },
                {
                    "internalType": "bool",
                    "name": "kycGranted",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_numberToMint",
                    "type": "uint256"
                }
            ],
            "name": "mintNFT",
            "outputs": [
                {
                    "internalType": "int64[]",
                    "name": "_serials",
                    "type": "int64[]"
                },
                {
                    "internalType": "bytes[]",
                    "name": "_metadataForMint",
                    "type": "bytes[]"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "pauseToken",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "responseCode",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "prngGenerator",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_oldAddresses",
                    "type": "address[]"
                }
            ],
            "name": "removeFromWhitelist",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "_removeToken",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "_batch",
                    "type": "uint256"
                }
            ],
            "name": "resetContract",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_remaingItems",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "retrieveLazy",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeTokenKyc",
            "outputs": [
                {
                    "internalType": "int64",
                    "name": "responseCode",
                    "type": "int64"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_lazyAmt",
                    "type": "uint256"
                }
            ],
            "name": "setBuyWlWithLazy",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_maxMint",
                    "type": "uint256"
                }
            ],
            "name": "setMaxWlAddressMint",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalMinted",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "receiverAddress",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferHbar",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "unpauseToken",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "responseCode",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_batchSize",
                    "type": "uint256"
                }
            ],
            "name": "updateBatchSize",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_cid",
                    "type": "string"
                }
            ],
            "name": "updateCID",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "_lazyFromContract",
                    "type": "bool"
                }
            ],
            "name": "updateContractPaysLazy",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_cooldownPeriod",
                    "type": "uint256"
                }
            ],
            "name": "updateCooldown",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_hbarCost",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_lazyCost",
                    "type": "uint256"
                }
            ],
            "name": "updateCost",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_lsct",
                    "type": "address"
                }
            ],
            "name": "updateLSCT",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_lbp",
                    "type": "uint256"
                }
            ],
            "name": "updateLazyBurnPercentage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_lazy",
                    "type": "address"
                }
            ],
            "name": "updateLazyToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_maxMint",
                    "type": "uint256"
                }
            ],
            "name": "updateMaxMint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_max",
                    "type": "uint256"
                }
            ],
            "name": "updateMaxMintPerWallet",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string[]",
                    "name": "_metadata",
                    "type": "string[]"
                },
                {
                    "internalType": "uint256",
                    "name": "_startIndex",
                    "type": "uint256"
                }
            ],
            "name": "updateMetadataArray",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_startTime",
                    "type": "uint256"
                }
            ],
            "name": "updateMintStartTime",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "_mintPaused",
                    "type": "bool"
                }
            ],
            "name": "updatePauseStatus",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_prng",
                    "type": "address"
                }
            ],
            "name": "updatePrng",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_refundWindow",
                    "type": "uint256"
                }
            ],
            "name": "updateRefundWindow",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "uint32",
                            "name": "second",
                            "type": "uint32"
                        },
                        {
                            "internalType": "address",
                            "name": "autoRenewAccount",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "autoRenewPeriod",
                            "type": "uint32"
                        }
                    ],
                    "internalType": "struct IHederaTokenService.Expiry",
                    "name": "expiryInfo",
                    "type": "tuple"
                }
            ],
            "name": "updateTokenExpiryInfo",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "responseCode",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "symbol",
                            "type": "string"
                        },
                        {
                            "internalType": "address",
                            "name": "treasury",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "memo",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "tokenSupplyType",
                            "type": "bool"
                        },
                        {
                            "internalType": "int64",
                            "name": "maxSupply",
                            "type": "int64"
                        },
                        {
                            "internalType": "bool",
                            "name": "freezeDefault",
                            "type": "bool"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "keyType",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "bool",
                                            "name": "inheritAccountKey",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "contractId",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "ed25519",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "ECDSA_secp256k1",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "delegatableContractId",
                                            "type": "address"
                                        }
                                    ],
                                    "internalType": "struct IHederaTokenService.KeyValue",
                                    "name": "key",
                                    "type": "tuple"
                                }
                            ],
                            "internalType": "struct IHederaTokenService.TokenKey[]",
                            "name": "tokenKeys",
                            "type": "tuple[]"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint32",
                                    "name": "second",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "autoRenewAccount",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "autoRenewPeriod",
                                    "type": "uint32"
                                }
                            ],
                            "internalType": "struct IHederaTokenService.Expiry",
                            "name": "expiry",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct IHederaTokenService.HederaToken",
                    "name": "tokenInfo",
                    "type": "tuple"
                }
            ],
            "name": "updateTokenInfo",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "responseCode",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_wlDiscount",
                    "type": "uint256"
                }
            ],
            "name": "updateWlDiscount",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "_wlOnly",
                    "type": "bool"
                }
            ],
            "name": "updateWlOnlyStatus",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "_changed",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_wlToken",
                    "type": "address"
                }
            ],
            "name": "updateWlToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ]
}